# ===================================================================
# CONFIGURAÇÃO DA APLICAÇÃO - Exemplo de .env
# ===================================================================
# Copie este arquivo para .env e configure conforme necessário

# ===================================================================
# SERVIDOR
# ===================================================================
PORT=3443
HOST=localhost
NODE_ENV=development

# ===================================================================
# SSL/TLS
# ===================================================================
SSL_ENABLED=true
SSL_KEY_PATH=server.key
SSL_CERT_PATH=server.crt

# ===================================================================
# CLUSTERING
# ===================================================================
# Habilitar clustering
CLUSTER_ENABLED=true

# Número de workers (padrão: número de CPUs)
# Configure conforme sua necessidade, independente da CPU
CLUSTER_WORKERS=4

# Máximo de workers permitidos
CLUSTER_MAX_WORKERS=8

# Delay antes de recriar worker morto (ms)
CLUSTER_RESPAWN_DELAY=1000

# ===================================================================
# TIMEOUTS
# ===================================================================
# Timeout do servidor (ms)
SERVER_TIMEOUT=30000

# Timeout para graceful shutdown (ms)
GRACEFUL_SHUTDOWN_TIMEOUT=5000

# ===================================================================
# BANCO DE DADOS - MONGODB
# ===================================================================
URI_MONGODB=mongodb://localhost:27017/auth-service

# Pool de conexões
MONGODB_MAX_POOL_SIZE=10
MONGODB_TIMEOUT=5000
MONGODB_SOCKET_TIMEOUT=45000

# ===================================================================
# REDIS (CACHE)
# ===================================================================
REDIS_ENABLED=true
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_TTL=3600

# ===================================================================
# SEGURANÇA - JWT
# ===================================================================
# IMPORTANTE: Use uma chave forte com pelo menos 32 caracteres
JWT_SECRET=your-super-secret-jwt-key-with-at-least-32-chars-for-security
JWT_EXPIRES=6h
JWT_ISSUER=auth-service
JWT_AUDIENCE=api-users

# ===================================================================
# SEGURANÇA - BCRYPT
# ===================================================================
# Rounds de salt (padrão: 12)
BCRYPT_SALT_ROUNDS=12

# ===================================================================
# CORS
# ===================================================================
ALLOWED_ORIGINS=http://localhost:8081,http://localhost:8081/login,http://localhost:8081/profile,http://localhost:8081/update,http://localhost:8081/delete,http://localhost:8081/register

# ===================================================================
# MONITORAMENTO
# ===================================================================
# Métricas Prometheus
METRICS_ENABLED=true
METRICS_ENDPOINT=/metrics

# Health Check
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_ENDPOINT=/health

# ===================================================================
# LOGGING
# ===================================================================
LOG_LEVEL=info
LOG_FORMAT=console
# LOG_FORMAT=structured  # Para logs em JSON
# LOG_FILE=/var/log/auth-service.log  # Para salvar em arquivo

# ===================================================================
# FEATURES (DESENVOLVIMENTO)
# ===================================================================
# Documentação Swagger
SWAGGER_ENABLED=true

# ===================================================================
# RATE LIMITING
# ===================================================================
# Configurações já existem no rateLimitConfig.js
# Você pode sobrescrever aqui se necessário

# ===================================================================
# NOTAS DE SEGURANÇA
# ===================================================================
# 1. NUNCA comite este arquivo .env no Git
# 2. Use JWT_SECRET forte em produção
# 3. Configure SSL em produção
# 4. Use variáveis de ambiente do sistema em produção
# 5. Configure firewall e rede adequadamente
